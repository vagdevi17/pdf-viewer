{"ast":null,"code":"'use client';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo } from 'react';\nimport makeCancellable from 'make-cancellable-promise';\nimport makeEventProps from 'make-event-props';\nimport clsx from 'clsx';\nimport invariant from 'tiny-invariant';\nimport warning from 'warning';\nimport OutlineContext from './OutlineContext.js';\nimport OutlineItem from './OutlineItem.js';\nimport { cancelRunningTask } from './shared/utils.js';\nimport useDocumentContext from './shared/hooks/useDocumentContext.js';\nimport useResolver from './shared/hooks/useResolver.js';\n/**\r\n * Displays an outline (table of contents).\r\n *\r\n * Should be placed inside `<Document />`. Alternatively, it can have `pdf` prop passed, which can be obtained from `<Document />`'s `onLoadSuccess` callback function.\r\n */\nexport default function Outline(props) {\n  const documentContext = useDocumentContext();\n  const mergedProps = Object.assign(Object.assign({}, documentContext), props);\n  const {\n      className,\n      inputRef,\n      onItemClick,\n      onLoadError: onLoadErrorProps,\n      onLoadSuccess: onLoadSuccessProps,\n      pdf\n    } = mergedProps,\n    otherProps = __rest(mergedProps, [\"className\", \"inputRef\", \"onItemClick\", \"onLoadError\", \"onLoadSuccess\", \"pdf\"]);\n  invariant(pdf, 'Attempted to load an outline, but no document was specified. Wrap <Outline /> in a <Document /> or pass explicit `pdf` prop.');\n  const [outlineState, outlineDispatch] = useResolver();\n  const {\n    value: outline,\n    error: outlineError\n  } = outlineState;\n  /**\r\n   * Called when an outline is read successfully\r\n   */\n  function onLoadSuccess() {\n    if (typeof outline === 'undefined' || outline === false) {\n      return;\n    }\n    if (onLoadSuccessProps) {\n      onLoadSuccessProps(outline);\n    }\n  }\n  /**\r\n   * Called when an outline failed to read successfully\r\n   */\n  function onLoadError() {\n    if (!outlineError) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    warning(false, outlineError.toString());\n    if (onLoadErrorProps) {\n      onLoadErrorProps(outlineError);\n    }\n  }\n  // biome-ignore lint/correctness/useExhaustiveDependencies: useEffect intentionally triggered on pdf change\n  useEffect(function resetOutline() {\n    outlineDispatch({\n      type: 'RESET'\n    });\n  }, [outlineDispatch, pdf]);\n  useEffect(function loadOutline() {\n    if (!pdf) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    const cancellable = makeCancellable(pdf.getOutline());\n    const runningTask = cancellable;\n    cancellable.promise.then(nextOutline => {\n      outlineDispatch({\n        type: 'RESOLVE',\n        value: nextOutline\n      });\n    }).catch(error => {\n      outlineDispatch({\n        type: 'REJECT',\n        error\n      });\n    });\n    return () => cancelRunningTask(runningTask);\n  }, [outlineDispatch, pdf]);\n  // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\n  useEffect(() => {\n    if (outline === undefined) {\n      return;\n    }\n    if (outline === false) {\n      onLoadError();\n      return;\n    }\n    onLoadSuccess();\n  }, [outline]);\n  const childContext = useMemo(() => ({\n    onItemClick\n  }), [onItemClick]);\n  const eventProps = useMemo(() => makeEventProps(otherProps, () => outline),\n  // biome-ignore lint/correctness/useExhaustiveDependencies: FIXME\n  [otherProps, outline]);\n  if (!outline) {\n    return null;\n  }\n  function renderOutline() {\n    if (!outline) {\n      return null;\n    }\n    return _jsx(\"ul\", {\n      children: outline.map((item, itemIndex) => _jsx(OutlineItem, {\n        item: item,\n        pdf: pdf\n      }, typeof item.dest === 'string' ? item.dest : itemIndex))\n    });\n  }\n  return _jsx(\"div\", Object.assign({\n    className: clsx('react-pdf__Outline', className),\n    ref: inputRef\n  }, eventProps, {\n    children: _jsx(OutlineContext.Provider, {\n      value: childContext,\n      children: renderOutline()\n    })\n  }));\n}","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","jsx","_jsx","useEffect","useMemo","makeCancellable","makeEventProps","clsx","invariant","warning","OutlineContext","OutlineItem","cancelRunningTask","useDocumentContext","useResolver","Outline","props","documentContext","mergedProps","assign","className","inputRef","onItemClick","onLoadError","onLoadErrorProps","onLoadSuccess","onLoadSuccessProps","pdf","otherProps","outlineState","outlineDispatch","value","outline","error","outlineError","toString","resetOutline","type","loadOutline","cancellable","getOutline","runningTask","promise","then","nextOutline","catch","undefined","childContext","eventProps","renderOutline","children","map","item","itemIndex","dest","ref","Provider"],"sources":["C:/Users/VAGDEVI/OneDrive/Desktop/Pdf Viewer/pdf-viewer/node_modules/react-pdf/dist/esm/Outline.js"],"sourcesContent":["'use client';\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { useEffect, useMemo } from 'react';\r\nimport makeCancellable from 'make-cancellable-promise';\r\nimport makeEventProps from 'make-event-props';\r\nimport clsx from 'clsx';\r\nimport invariant from 'tiny-invariant';\r\nimport warning from 'warning';\r\nimport OutlineContext from './OutlineContext.js';\r\nimport OutlineItem from './OutlineItem.js';\r\nimport { cancelRunningTask } from './shared/utils.js';\r\nimport useDocumentContext from './shared/hooks/useDocumentContext.js';\r\nimport useResolver from './shared/hooks/useResolver.js';\r\n/**\r\n * Displays an outline (table of contents).\r\n *\r\n * Should be placed inside `<Document />`. Alternatively, it can have `pdf` prop passed, which can be obtained from `<Document />`'s `onLoadSuccess` callback function.\r\n */\r\nexport default function Outline(props) {\r\n    const documentContext = useDocumentContext();\r\n    const mergedProps = Object.assign(Object.assign({}, documentContext), props);\r\n    const { className, inputRef, onItemClick, onLoadError: onLoadErrorProps, onLoadSuccess: onLoadSuccessProps, pdf } = mergedProps, otherProps = __rest(mergedProps, [\"className\", \"inputRef\", \"onItemClick\", \"onLoadError\", \"onLoadSuccess\", \"pdf\"]);\r\n    invariant(pdf, 'Attempted to load an outline, but no document was specified. Wrap <Outline /> in a <Document /> or pass explicit `pdf` prop.');\r\n    const [outlineState, outlineDispatch] = useResolver();\r\n    const { value: outline, error: outlineError } = outlineState;\r\n    /**\r\n     * Called when an outline is read successfully\r\n     */\r\n    function onLoadSuccess() {\r\n        if (typeof outline === 'undefined' || outline === false) {\r\n            return;\r\n        }\r\n        if (onLoadSuccessProps) {\r\n            onLoadSuccessProps(outline);\r\n        }\r\n    }\r\n    /**\r\n     * Called when an outline failed to read successfully\r\n     */\r\n    function onLoadError() {\r\n        if (!outlineError) {\r\n            // Impossible, but TypeScript doesn't know that\r\n            return;\r\n        }\r\n        warning(false, outlineError.toString());\r\n        if (onLoadErrorProps) {\r\n            onLoadErrorProps(outlineError);\r\n        }\r\n    }\r\n    // biome-ignore lint/correctness/useExhaustiveDependencies: useEffect intentionally triggered on pdf change\r\n    useEffect(function resetOutline() {\r\n        outlineDispatch({ type: 'RESET' });\r\n    }, [outlineDispatch, pdf]);\r\n    useEffect(function loadOutline() {\r\n        if (!pdf) {\r\n            // Impossible, but TypeScript doesn't know that\r\n            return;\r\n        }\r\n        const cancellable = makeCancellable(pdf.getOutline());\r\n        const runningTask = cancellable;\r\n        cancellable.promise\r\n            .then((nextOutline) => {\r\n            outlineDispatch({ type: 'RESOLVE', value: nextOutline });\r\n        })\r\n            .catch((error) => {\r\n            outlineDispatch({ type: 'REJECT', error });\r\n        });\r\n        return () => cancelRunningTask(runningTask);\r\n    }, [outlineDispatch, pdf]);\r\n    // biome-ignore lint/correctness/useExhaustiveDependencies: Ommitted callbacks so they are not called every time they change\r\n    useEffect(() => {\r\n        if (outline === undefined) {\r\n            return;\r\n        }\r\n        if (outline === false) {\r\n            onLoadError();\r\n            return;\r\n        }\r\n        onLoadSuccess();\r\n    }, [outline]);\r\n    const childContext = useMemo(() => ({\r\n        onItemClick,\r\n    }), [onItemClick]);\r\n    const eventProps = useMemo(() => makeEventProps(otherProps, () => outline), \r\n    // biome-ignore lint/correctness/useExhaustiveDependencies: FIXME\r\n    [otherProps, outline]);\r\n    if (!outline) {\r\n        return null;\r\n    }\r\n    function renderOutline() {\r\n        if (!outline) {\r\n            return null;\r\n        }\r\n        return (_jsx(\"ul\", { children: outline.map((item, itemIndex) => (_jsx(OutlineItem, { item: item, pdf: pdf }, typeof item.dest === 'string' ? item.dest : itemIndex))) }));\r\n    }\r\n    return (_jsx(\"div\", Object.assign({ className: clsx('react-pdf__Outline', className), ref: inputRef }, eventProps, { children: _jsx(OutlineContext.Provider, { value: childContext, children: renderOutline() }) })));\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}